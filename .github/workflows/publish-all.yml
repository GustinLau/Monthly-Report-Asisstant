name: Publish-All
on:
  push:
    tags:
      - 'v*.*.*'

# 设置环境变量
env:
  # 时区（设置时区可使页面中的`最近更新时间`使用时区时间）
  TZ: Asia/Shanghai

jobs:
  build:

    strategy:
      matrix:
        node-version: [ 18.x ]
        os: [ windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      # 检出仓库
      - name: Checkout
        uses: actions/checkout@v4

      # 安装 Node
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # 获取node_modules缓存
      - name: Cache Node-Modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ matrix.node-version }}-${{ env.cache-name }}-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-v${{ matrix.node-version }}-${{ env.cache-name }}-

      # 缓存未命中则安装依赖
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install

      # 运行构建脚本
      - name: Build
        run: npm run electron:windows

      # 清理文件
      - name: Cleanup Artifacts
        run: |
          node cleanup.js .exe .blockmap latest.yml

      # 构建阿里云OSS环境
      - name: Setup OSS Util
        uses: yizhoumo/setup-ossutil@v2
        with:
          ossutil-version: 'latest'
          endpoint: ${{ secrets.ALIYUN_OSS_ENDPOINT }}
          access-key-id: ${{ secrets.ALIYUN_OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.ALIYUN_OSS_ACCESS_KEY_SECRET }}

      # 上传到OSS
      - name: Upload to OSS
        run: |
          ossutil cp -rf release/ oss://${{ secrets.ALIYUN_OSS_BUCKET }}/${{ secrets.ALIYUN_OSS_PATH }}/

      # 清理文件
      - name: Cleanup Artifacts
        run: |
          node cleanup.js .exe

      # 发布
      - name: release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "release/**"
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN_4_GITHUB }}